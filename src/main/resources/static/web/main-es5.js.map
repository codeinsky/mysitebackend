{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about-me/about-me.component.ts","webpack:///src/app/about-me/about-me.component.html","webpack:///src/app/animations/animation-liked.ts","webpack:///src/app/animations/animation-thanks.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/cursor/cursor.component.ts","webpack:///src/app/cursor/cursor.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/matrix/matrix.component.ts","webpack:///src/app/matrix/matrix.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/pc-screen/pc-screen.component.ts","webpack:///src/app/pc-screen/pc-screen.component.html","webpack:///src/app/projects/projects.component.ts","webpack:///src/app/projects/projects.component.html","webpack:///src/app/services/ip-service.service.ts","webpack:///src/app/services/rest-requests.service.ts","webpack:///src/app/typing-text/typing-text.component.ts","webpack:///src/app/typing-text/typing-text.component.html","webpack:///src/app/vote/vote.component.ts","webpack:///src/app/vote/vote.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutMeComponent","selector","templateUrl","styleUrls","Liked","transform","Thanks","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","cookie","ip","restRequestService","disableVote","title","cookieExprHr","IpAddress","newUserArrived","getIPAddress","subscribe","res","visitor","date","Date","comment","visitorRequest","next","data","console","log","error","AppModule","declarations","providers","bootstrap","ContactComponent","CursorComponent","onOf","setInterval","HomeComponent","showMatrixTrigger","runClicked","buttonLabel","btnCass","matrix","start","screen","typeHello","runTheCode","MatrixComponent","matrixCount","matrixDelayed","params","i","param","symbol","width","speed","result","Math","floor","random","left","time","toString","push","x","setTimeout","generateParams","opacity","position","top","color","animations","NavbarComponent","PcScreenComponent","show","ProjectsComponent","IpServiceService","http","get","providedIn","RestRequestsService","localUrl","post","vote","TypingTextComponent","chars","getArrayVallues","index","interval","commandLine","split","delayTime","length","clearInterval","VoteComponent","votedCurrentState","thanksCurrentState","voteResult","liked","disliked","ipVoted","cookieVoted","likedStarAnimation","thanksStartAnimation","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-me',\n  templateUrl: './about-me.component.html',\n  styleUrls: ['./about-me.component.css']\n})\nexport class AboutMeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" id=\"card\">\n    <div class=\"card-header\">\n      <h4>About me</h4>\n    </div>\n    <div class=\"card-body\" id=\"body\">\n      <h5 class=\"card-title\">Programming classes</h5>\n      <h3>UNDER CONSTRUCTION</h3>\n    </div>\n  </div>","import {trigger , style , state , transition , animate} from \"@angular/animations\";\n\n\nexport const Liked = trigger('liked', [\n  state('initial', style({\n    transform: 'scale(1)'\n  })),\n  state('final', style({\n    transform: 'scale(0)'\n  })),\n  transition('final=>initial', animate('1000ms')),\n  transition('initial=>final', animate('1500ms'))\n])","import {trigger , style , state , transition , animate} from \"@angular/animations\";\n\n\nexport const Thanks = trigger('thanks', [\n  state('initial', style({\n    transform: 'scale(0)'\n    \n  })),\n  state('final', style({\n    transform: 'scale(1.2)'\n  })),\n  transition('initial=>final', animate('2800ms 500ms'))\n])","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AboutMeComponent } from './about-me/about-me.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ContactComponent } from './contact/contact.component';\n\n\nconst routes: Routes = [\n  {path: '' , component: HomeComponent},\n  {path: 'aboutme' , component: AboutMeComponent},\n  {path: 'projects' , component: ProjectsComponent},\n  {path: 'contact' , component: ContactComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component,OnInit } from '@angular/core';\nimport {CookieService} from 'ngx-cookie-service';\nimport { IpServiceService } from \"./services/ip-service.service\";\nimport { RestRequestsService} from \"./services/rest-requests.service\";\nimport { Visitor } from \"./rest-interfaces/visit\"\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  public disableVote:boolean = true;\n  title = 'MySite';\n  private cookieExprHr:number=5;\n  public IpAddress:String = null;\n\n  constructor(private cookie:CookieService, \n              private ip:IpServiceService,\n              private restRequestService:RestRequestsService){}\n\n  ngOnInit(): void {\n    this.newUserArrived();\n  }\n\n  newUserArrived(){\n    this.ip.getIPAddress().subscribe((res:any)=>{\n      let IpAddress:String = res.ip;\n      let visitor:Visitor  = {id:null , date:new Date() , ip:IpAddress, comment:\"Visitor from fronted1\"};\n      this.restRequestService.visitorRequest(visitor).subscribe(\n        {\n          next: data => console.log(data),\n          error: error => console.error(\"Error response\", error)\n        }\n          );\n    });\n  }\n\n\n  // checkCookie(){\n  //   let cookies = this.cookie.get(\"visitorid\");\n  //   if (cookies == \"\"){\n  //     console.log(\"First time visit\")\n  //     this.cookie.set(\"visitorid\",\"1234\", 0.5);\n  //     console.log(\"cookie set\")\n  //   } \n  //   else {\n  //     console.log(\"That is user ID, already visited\" + \" \" + this.cookie.get(\"visitorid\"));\n  //     this.disableVote=false;\n\n  //   }\n  // }\n\n  // resetCookie(){\n  //     this.cookie.deleteAll();\n  //     console.log(\"All cookies deleted\");\n  // }\n\n\n}\n","<app-navbar></app-navbar>\n<div id=\"hello\">\n        Hello! \n        I am Alexander, <br>\n        Full Stack Developer <br>\n        <img  id=\"icon\" src=\"https://img.icons8.com/color/96/000000/spring-logo.png\">\n        <img  id=\"icon\" src=\"https://img.icons8.com/color/96/000000/java-coffee-cup-logo.png\"/>\n        <img  id=\"icon\" src=\"https://img.icons8.com/color/96/000000/angularjs.png\"/>\n        <img  id=\"icon\" src=\"https://img.icons8.com/color/96/000000/docker.png\"/>\n        <img  id=\"icon\" src=\"https://img.icons8.com/doodle/96/000000/android--v2.png\"/>\n\n</div>\n\n<div id=\"outlet\">\n        <router-outlet></router-outlet>\n</div>\n\n\n\n<app-vote id=\"vote\"></app-vote>\n\n<div id=\"iconlink\">\n        Icon's provided by <a target=\"_blank\" href=\"https://icons8.com\">Icons8</a>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AboutMeComponent } from './about-me/about-me.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { PcScreenComponent } from './pc-screen/pc-screen.component';\nimport { TypingTextComponent } from './typing-text/typing-text.component';\nimport { CursorComponent } from './cursor/cursor.component';\nimport { MatrixComponent } from './matrix/matrix.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { VoteComponent } from './vote/vote.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    AboutMeComponent,\n    ProjectsComponent,\n    ContactComponent,\n    PcScreenComponent,\n    TypingTextComponent,\n    CursorComponent,\n    MatrixComponent,\n    VoteComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" id=\"card\">\n    <div class=\"card-header\">\n      <h4>Contact me</h4>\n    </div>\n    <div class=\"card-body\" id=\"body\">\n      <h5 class=\"card-title\">Contact details:</h5>\n      <h3>UNDER CONSTRUCTION</h3>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { trigger , state , animate , transition , style, animation } from '@angular/animations';\n\n\n\n@Component({\n  selector: 'app-cursor',\n  templateUrl: './cursor.component.html',\n  styleUrls: ['./cursor.component.css'], \n  // animations:[\n  //   trigger('onOf' , [\n  //     state('inactive' , style({opacity:0})),\n  //     state('active' , style({opacity:1})),\n  //     transition('*<=>*' , [\n  //       animate(200)\n  //     ])\n  //   ])\n  // ]\n})\nexport class CursorComponent implements OnInit {\n  public onOf: Boolean = true;\n  constructor() { }\n\n  ngOnInit(): void {\n    setInterval(()=> {\n      this.onOf = !this.onOf;\n    } ,500);\n  }\n  }\n\n\n\n\n","<p *ngIf=onOf style=\"color: green;\">|</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatrixComponent } from '../matrix/matrix.component';\nimport { PcScreenComponent } from '../pc-screen/pc-screen.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public showMatrixTrigger: Boolean = false;\n  @ViewChild(MatrixComponent) matrix : MatrixComponent;\n  @ViewChild(PcScreenComponent) screen: PcScreenComponent;\n\n  public runClicked:boolean= false; \n  public buttonLabel:String= \"RUN\";\n  public btnCass = \"btn btn-secondary\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n   runTheCode(){\n      this.runClicked = true;\n      this.buttonLabel = \"RAN\";\n      this.matrix.start();\n      this.screen.typeHello();\n   }\n\n\n\n}\n","\n\n<div class=\"card\" id=\"card\">\n    <div class=\"card-header\">\n     <h4> Welcome </h4>\n    </div>\n    <div class=\"card-body\" id=\"body\">\n      <button  (click)=\"runTheCode()\" [disabled]=\"runClicked\" id=\"runbtn\" type=\"button\" class=\"btn btn-secondary\">{{buttonLabel}}</button>\n            <app-typing-text \n              commandLine='System.out.println(\"Hello word!!!\");'\n              color=\"black\"\n              delayTime=100>\n            </app-typing-text>\n            \n            <div id=\"matrix\">\n              <app-matrix></app-matrix>\n            </div>\n            <div id=\"screen\">\n                <app-pc-screen></app-pc-screen>\n            </div>\n    </div>\n  </div>","import { Component, OnInit} from '@angular/core';\nimport { trigger , state , transition , animate , style} from '@angular/animations';\nimport {matrixParams} from \"./matrixParams\"\n\n\n@Component({\n  selector: 'app-matrix',\n  templateUrl: './matrix.component.html',\n  styleUrls: ['./matrix.component.css'],\n  animations:[\n   trigger('matrix' , [\n     transition('void => *' , [\n       style({opacity:0.4 , position:'absolute', top:'5px', left:'{{left}}'+'px', color:'green'}),\n       animate('{{time}}'+'ms' , style({opacity:1, position:'absolute', top:'100px' , left:'{{left}}' + 'px'}))\n        ], {params: { time:'100' , left:'5'}})\n      ])\n    ]})\n\nexport class MatrixComponent implements OnInit {\n\n  private matrixCount=10;\n  private matrixDelayed=10;\n  public params:matrixParams[]=[];\n  constructor() { }\n  \n  ngOnInit(): void {\n\n  }\n\n  generateParams(){\n    for (var i=1 ; i<this.matrixCount ; i++){\n      let param:matrixParams = {symbol:\"\", width:\"\" , speed:\"\"};\n      let result:number =  Math.floor(Math.random() * (1 - 0 + 1)) + 0;\n      let left:number = Math.floor(Math.random() * (1 - 40+ 360)) + 40;\n      let time:number = Math.floor(Math.random() * (1 - 700 + 2000)) + 700;\n\n      param.symbol = result.toString();\n      param.width = left.toString();\n      param.speed = time.toString();\n      this.params.push(param);   \n    \n    }\n\n  }\n\n  start(){\n    for (var x = 0 ; x < this.matrixDelayed ; x++){\n      setTimeout (()=>{this.generateParams(); }, x*350);\n      // this.generateParams();\n    }\n   \n    this.params=[];\n  }\n  \n  }\n\n\n\n\n\n\n","<div>\n        <span *ngFor=\"let param of params;\" id=\"bin\"\n                [@matrix]=\"{value :'go' , params: {time:param.speed , left:param.width}}\" > \n                        {{param.symbol}}\n        </span>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Admin Tools</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"aboutme\">About me</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"/projects\">Projects </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" routerLink=\"contact\">Contact </a>\n        </li>\n      </ul>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </nav>\n  \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pc-screen',\n  templateUrl: './pc-screen.component.html',\n  styleUrls: ['./pc-screen.component.css']\n})\nexport class PcScreenComponent implements OnInit {\n  public show:boolean=false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  typeHello(){\n    this.show=true;\n  };\n\n}\n","<div id=\"screen\">\n    <app-typing-text commandLine=\"root@myos:~/project$\" color=\"green\" delayTime=10></app-typing-text><br>\n    <app-typing-text *ngIf=show commandLine=\"Hello world!!! \" color=\"green\" delayTime=300></app-typing-text>\n    <app-cursor></app-cursor>\n    \n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" id=\"card\">\n    <div class=\"card-header\">\n      <h4>Projects</h4>\n    </div>\n    <div class=\"card-body\" id=\"body\">\n      <h5 class=\"card-title\">Projects list</h5>\n      <h3>UNDER CONSTRUCTION</h3>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  public getIPAddress(){\n    return this.http.get(\"http://api.ipify.org/?format=json\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Visitor} from '../rest-interfaces/visit';\nimport { Vote } from '../rest-interfaces/vote'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestRequestsService {\n  localUrl:String = \"http://localhost:8181\";\n  constructor(private http:HttpClient) { }\n\n  public visitorRequest(visitor:Visitor){\n    return this.http.post<any>(this.localUrl+'/rest/visitor' , visitor);\n        \n      }\n\n  public vote(vote:Vote){\n    return this.http.post<any>(this.localUrl+'/rest/vote', vote);\n\n  }\n   \n  }\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'app-typing-text',\n  templateUrl: './typing-text.component.html',\n  styleUrls: ['./typing-text.component.css']\n})\nexport class TypingTextComponent implements OnInit {\n  @Input() commandLine:String;\n  @Input() color:String;\n  @Input() delayTime:number;\n  public chars:string[];\n  public interval;\n  constructor() { \n   }\n\n  ngOnInit(): void {\n    this.chars = [];\n    console.log(this.color);\n    this.getArrayVallues(0);\n  \n\n  }\n\n  getArrayVallues(index){\n    this.interval = setInterval(()=> {\n      this.chars.push(this.commandLine.split('')[index]);\n      index++;\n    },this.delayTime);\n    if (index == this.commandLine.split('').length){\n      clearInterval(this.interval);\n      console.log(\"onterval cleared\")\n      }\n    }\n\n}\n","<span *ngFor=\"let char of chars\" [style.color]=\"color\">{{char}}</span>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Vote } from \"../rest-interfaces/vote\"\nimport { IpServiceService } from \"../services/ip-service.service\";\nimport { RestRequestsService} from \"../services/rest-requests.service\";\nimport { Liked} from '../animations/animation-liked';\nimport { Thanks} from '../animations/animation-thanks'\n\n@Component({\n  selector: 'app-vote',\n  templateUrl: './vote.component.html',\n  styleUrls: ['./vote.component.css'],\n  animations:[Thanks , Liked]\n})\nexport class VoteComponent implements OnInit {\n  public disableVote:boolean = true;\n  public votedCurrentState = 'initial';\n  public thanksCurrentState = 'initial';\n  public \n  constructor(private ip:IpServiceService,private restRequestService:RestRequestsService) { }\n\n  ngOnInit(): void {\n  }\n\n  vote(voteResult:String){\n    \n     this.ip.getIPAddress().subscribe(\n       \n       (res:any)=>{\n        let vote:Vote = {id:null,liked:null,disliked:null,date:new Date(),ipVoted:res.ip,cookieVoted:null}\n        if (voteResult==\"like\"){\n           vote.liked=true;\n           vote.disliked=false;\n        }   \n        else {\n     \n         vote.liked=false;\n         vote.disliked=true;\n        }\n \n     //Register like/dislike on backend DB  \n       this.restRequestService.vote(vote).subscribe(\n         {\n           next: data => \n           {\n             console.log(\"Voted \" + data); \n             this.likedStarAnimation();\n             this.thanksStartAnimation();\n           },\n           error: error => \n           {\n             console.error(\"Error response \", error);\n           }\n         }\n           );\n     },\n     (error)=>{\n       console.log(\"Failed to retrive the IP\");\n     }\n     );\n   }\n\n   likedStarAnimation(){\n     if (this.votedCurrentState=\"initial\"){\n        this.votedCurrentState=\"final\"\n     }\n     else {\n        console.log(\"already voted\");\n     }\n   }\n\n   thanksStartAnimation(){\n     console.log(\"animation done\")\n     if (this.thanksCurrentState==\"initial\"){\n        this.thanksCurrentState=\"final\"\n     }\n\n   }\n}\n","<div [@liked]=\"votedCurrentState\" id=\"vote\" >\n\n    <span style=\"color: honeydew;\">Like that website </span> <br>\n    <input type=\"image\" id=\"like\"  (click)=\"vote('like')\" src=\"https://img.icons8.com/dusk/64/000000/thumb-up.png\"/>\n    <span id=\"or\"> OR </span>\n    <input type=\"image\" id=\"dislike\" (click)=\"vote('dislike')\" src=\"https://img.icons8.com/dusk/64/000000/thumbs-down.png\"/>\n    \n    <br>\n</div>\n\n<div [@thanks]=thanksCurrentState id=\"thanks\">\n    <span style=\"color: honeydew;\">Thanks</span>\n    <br>\n    <img src=\"https://img.icons8.com/color/48/000000/thank-you.png\"/>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}